
{
    "swagger": "2.0",
    "info": {
        "title": "hexABC REST API",
        "license": {
            "name": "MIT License"
        },
        "version": "",
        "description": "In this section there is the documentation for all the available public end points of the hexABC REST API. Click on each end point and its documentation will be expanded."
    },
    "host": "",
    "basePath": "\/api",
    "consumes": [
        "application\/json"
    ],
    "tags": [
        {
            "name": "Project metadata",
            "description": "Projects data and metadata"
        },
        {
            "name": "Project files",
            "description": "Projects dowlnoadable files"
        },{
            "name": "Project analyses",
            "description": "Projects analyses"
        }
    ],
    "paths": {
        "\/projects": {
            "get": {
                "tags": [
                    "Project metadata"
                ],
                "summary": "Get list of projects",
                "description": "Gets a paginated list of summaries of all the projects available in the database",
                "operationId": "getProjects",
                "produces": [
                    "application\/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of projects in each page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Number of page to be returned",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "properties": {
                                "total": {
                                    "description": "Total number of projects in the database",
                                    "type": "number"
                                },
                                "projects": {
                                    "description": "List of projects",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/definitions\/ShortProject"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "\/projects\/{id}": {
            "get": {
                "tags": [
                    "Project metadata"
                ],
                "summary": "Get single project",
                "description": "Gets all the available information for a single project corresponding to the given identifier",
                "operationId": "getProject",
                "produces": [
                    "application\/json"
                ],
                "parameters": [
                    { 
                        "$ref": "#/definitions/arguments/id" 
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/Project"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/StatusError"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "\/projects\/{id}\/topology": {
            "get": {
                "tags": [
                    "Project metadata"
                ],
                "summary": "Get topology info",
                "description": "Gets all the topology information for a single project corresponding to the given identifier",
                "operationId": "getTopology",
                "produces": [
                    "application\/json"
                ],
                "parameters": [
                    { 
                        "$ref": "#/definitions/arguments/id" 
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/Topology"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/StatusError"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "\/projects\/{id}\/structure": {
            "get": {
                "tags": [
                    "Project files"
                ],
                "summary": "Get structure",
                "description": "Gets the PDB file structure for a single project corresponding to the given identifier",
                "operationId": "getStructure",
                "produces": [
                    "chemical/x-pdb"
                ],
                "parameters": [
                    { 
                        "$ref": "#/definitions/arguments/id" 
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "chemical/x-pdb": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/StatusError"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "\/projects\/{id}\/trajectory": {
            "get": {
                "tags": [
                    "Project files"
                ],
                "summary": "Get trajectory",
                "description": "Gets the trajectory file for a single project corresponding to the given identifier",
                "operationId": "getTrajectory",
                "produces": [
                    "text\/mdcrd",
                    "application/xtc",
                    "application/trr"

                ],
                "parameters": [
                    { 
                        "$ref": "#/definitions/arguments/id" 
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Format of the trajectory",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "mdcrd",
                            "xtc",
                            "trr"
                        ],
                        "default": "xtc"
                    },
                    {
                        "name": "frames",
                        "in": "query",
                        "description": "Specify a frame range for the returned trajectory. The user can request only specific frames instead of the whole file. It can also be defined as the start:end:step format.",
                        "required": true,
                        "type": "string",
                        "default": "1",
                        "example": "1 (for a single frame, first in this case), 1:10 (for a range of frames, from 1 to 10) or 10:20:2  (for a range of frames with step, from 1 to 20 every 2)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "text/mdcrd": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/xtc": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/trr": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/StatusError"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "\/projects\/sequence": {
            "get": {
                "tags": [
                    "Project metadata"
                ],
                "summary": "Search by sequence",
                "description": "Gets a paginated list of summaries of all the projects matching with a given sequence",
                "operationId": "searchBySequence",
                "produces": [
                    "application\/json"
                ],
                "parameters": [
                    {
                        "name": "seq",
                        "in": "query",
                        "description": "Sequence to search in projects",
                        "required": false,
                        "type": "string",
                        "default": "GTAC"
                    },
                    {
                        "name": "seqname",
                        "in": "query",
                        "description": "String included in the name of project",
                        "required": false,
                        "type": "string",
                        "default": "044"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "properties": {
                                "total": {
                                    "description": "Total number of projects in the database",
                                    "type": "number"
                                },
                                "projects": {
                                    "description": "List of projects",
                                    "type": "array",
                                    "items": {
                                        "$ref": "#\/definitions\/ShortProject"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "\/projects\/{id}\/analyses\/rmsd\/{type}": {
            "get": {
                "tags": [
                    "Project analyses"
                ],
                "summary": "RMSd analyses",
                "description": "Returns the data for RMSd analyses",
                "operationId": "getRMSdANalyses",
                "produces": [
                    "application\/json"
                ],
                "parameters": [
                    { 
                        "$ref": "#/definitions/arguments/id" 
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of RMSD to calculate. If 'residues' is selected, the 'res' parameter below becomes relevant.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "average",
                            "firstframe",
                            "residues",
                            "pairwise"
                        ]
                    },
                    {
                        "name": "res",
                        "in": "query",
                        "description": "Number of residue (only used for residues type). If not provided, the RMSD will be calculated for all residues",
                        "required": false,
                        "type": "integer",
                        "default": null
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/RMSDAnalysis"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/StatusError"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "\/projects\/{id}\/analyses\/dist-res\/{type}": {
            "get": {
                "tags": [
                    "Project analyses"
                ],
                "summary": "Distance per residue analyses",
                "description": "Returns the data for distance per residue analyses",
                "operationId": "getDistPerResAnalyses",
                "produces": [
                    "application\/json"
                ],
                "parameters": [
                    { 
                        "$ref": "#/definitions/arguments/id" 
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Type of distance per residue analysis (mean or stdev).",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "means",
                            "stdvs"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/DistPerResAnalysis"
                        }
                    },
                    "404": {
                        "description": "Resource Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#\/definitions\/StatusError"
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "arguments": {
            "id": {
                "name": "id",
                "in": "path",
                "description": "Project identifier, it must be a FAIR identifier (i.e. abc:A0001)",
                "required": true,
                "type": "string",
                "default": "abc:A0001"
            }
        },
        "ShortProject": {
            "required": [
                "id",
                "accession",
                "name",
                "sequences",
                "analyses"
            ],
            "properties": {
                "id": {
                    "description": "identifier",
                    "type": "string"
                },
                "accession": {
                    "description": "hexABC FAIR identifier for this project",
                    "type": "string"
                },
                "name": {
                    "description": "Project description",
                    "type": "string"
                },
                "sequences": {
                    "type": "array",
                    "items": {
                        "description": "Sequence",
                        "type": "string"
                    }
                },
                "analyses": {
                    "type": "array",
                    "items": {
                        "description": "Analysis",
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "ShortProject"
            }
        },
        "Project": {
            "required": [
                "accession",
                "published",
                "metadata",
                "chains",
                "mdref",
                "mds",
                "files",
                "mdNumber",
                "analyses",
                "identifier"
            ],
            "properties": {
                "accession": {
                    "description": "hexABC FAIR identifier for this project",
                    "type": "string"
                },
                "published": {
                    "description": "published",
                    "type": "string"
                },
                "metadata": {
                    "description": "metadata",
                    "type": "object"
                },
                "chains": {
                    "description": "chains",
                    "type": "array",
                    "items": {
                        "description": "chains",
                        "type": "string"
                    }
                },
                "mdref": {
                    "description": "mdref",
                    "type": "number",
                    "format": "integer"
                },
                "mds": {
                    "description": "mds",
                    "type": "array",
                    "items": {
                        "description": "mds",
                        "type": "string"
                    }
                },
                "files": {
                    "description": "files",
                    "type": "array",
                    "items": {
                        "description": "files",
                        "type": "string"
                    }
                },
                "mdNumber": {
                    "description": "mdNumber",
                    "type": "number",
                    "format": "integer"
                },
                "analyses": {
                    "type": "array",
                    "items": {
                        "description": "Analysis",
                        "type": "string"
                    }
                },
                "identifier": {
                    "description": "identifier",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "Project"
            }
        },
        "RMSDAnalysis": {
            "required": [
                "step",
                "rmsd"
            ],
            "properties": {
                "mean": {
                    "description": "RMSD mean",
                    "type": "number"
                },
                "stdev": {
                    "description": "RMSD standard deviation",
                    "type": "number"
                },
                "step": {
                    "description": "RMSD mean",
                    "type": "integer"
                },
                "rmsd": {
                    "description": "RMSD",
                    "type": "array",
                    "items": {
                        "description": "RMSD value for each frame",
                        "type": "number"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "RMSDAnalysis"
            }
        },
        "DistPerResAnalysis": {
            "required": [
                "strand1",
                "strand2",
                "data"
            ],
            "properties": {
                "strand1": {
                    "description": "List of nucleotides of strand 1",
                    "type": "array",
                    "items": {
                        "description": "Nucleotide name",
                        "type": "string"
                    }
                },
                "strand2": {
                    "description": "List of nucleotides of strand 2",
                    "type": "array",
                    "items": {
                        "description": "Nucleotide name",
                        "type": "string"
                    }
                },
                "data": {
                    "description": "Distance per residue",
                    "type": "array",
                    "items": {
                        "description": "Distance per residue for each nucleotide",
                        "type": "number"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "DistPerResAnalysis"
            }
        },
        "StatusError": {
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "description": "Response of the REST API server",
                    "type": "string"
                }
            },
            "type": "object",
            "xml": {
                "name": "StatusError"
            }
        },
        "Topology": {
            "required": [
                "atom_names",
                "atom_elements",
                "atom_charges",
                "atom_residue_indices",
                "atom_bonds",
                "residue_names",
                "residue_numbers",
                "residue_chain_indices",
                "chain_names",
                "pbc_residues"
            ],
            "properties": {
                "atom_names": {
                    "type": "array",
                    "items": {
                        "description": "atom_names",
                        "type": "string"
                    }
                },
                "atom_charges": {
                    "type": "array",
                    "items": {
                        "description": "atom_charges",
                        "type": "number"
                    }
                },
                "atom_residue_indices": {
                    "type": "array",
                    "items": {
                        "description": "atom_residue_indices",
                        "type": "integer"
                    }
                },
                "atom_bonds": {
                    "type": "array",
                    "description": "atom index",
                    "items": {
                        "description": "number of bonds",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "residue_names": {
                    "type": "array",
                    "items": {
                        "description": "residue_names",
                        "type": "string"
                    }
                },
                "residue_numbers": {
                    "type": "array",
                    "items": {
                        "description": "residue_numbers",
                        "type": "integer"
                    }
                },
                "residue_icodes": {
                    "type": "array",
                    "items": {
                        "description": "residue_icodes",
                        "type": "string"
                    }
                },
                "residue_chain_indices": {
                    "type": "array",
                    "items": {
                        "description": "residue_chain_indices",
                        "type": "integer"
                    }
                },
                "chain_names": {
                    "type": "array",
                    "items": {
                        "description": "chain_names",
                        "type": "string"
                    }
                },
                "pbc_residues": {
                    "type": "array",
                    "items": {
                        "description": "chain_names",
                        "type": "integer"
                    }
                }
            },
            "type": "object",
            "xml": {
                "name": "ShortProject"
            }
        }
    }
}